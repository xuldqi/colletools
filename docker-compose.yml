version: '3.8'

services:
  # 主域名应用容器
  colletools-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: colletools-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DOMAIN=${PRIMARY_DOMAIN}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - colletools-network
    depends_on:
      - nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 第二域名应用容器
  colletools-app-secondary:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: colletools-app-secondary
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DOMAIN=${SECONDARY_DOMAIN}
    volumes:
      - ./logs-secondary:/app/logs
    networks:
      - colletools-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
      - certbot-www:/var/www/certbot:ro
    environment:
      - PRIMARY_DOMAIN=${PRIMARY_DOMAIN}
      - SECONDARY_DOMAIN=${SECONDARY_DOMAIN}
    depends_on:
      - colletools-app
      - colletools-app-secondary
    networks:
      - colletools-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 主域名 SSL 证书管理
  certbot-primary:
    image: certbot/certbot
    container_name: certbot-primary
    volumes:
      - ./ssl:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${SSL_EMAIL} --agree-tos --no-eff-email -d ${PRIMARY_DOMAIN} -d www.${PRIMARY_DOMAIN}
    depends_on:
      - nginx

  # 第二域名 SSL 证书管理
  certbot-secondary:
    image: certbot/certbot
    container_name: certbot-secondary
    volumes:
      - ./ssl:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${SSL_EMAIL} --agree-tos --no-eff-email -d ${SECONDARY_DOMAIN} -d www.${SECONDARY_DOMAIN}
    depends_on:
      - nginx

volumes:
  uploads:
    driver: local
  logs:
    driver: local
  ssl:
    driver: local
  certbot-www:
    driver: local

networks:
  colletools-network:
    driver: bridge